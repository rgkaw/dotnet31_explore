@model mvc.Models.Event.PaginateType

@{
    ViewData["Title"] = "Type";
}

<h2>Type List</h2>
<p>
    <button class="btn btn-outline-dark" data-toggle="modal" data-target="@("#CreateType")" data-url="@Url.Action($"CreateType","Event")">Create</button>
    @await Html.PartialAsync("Modal/_CreateType",new mvc.Models.Event.EventType())
</p>



<!-- Button trigger modal -->
<!-- Modal -->


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(name => Model.EventType.First().Name)
            </th>

        </tr>


    </thead>
    <tbody>
        @foreach (var item in Model.EventType)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a class="btn btn-primary" data-toggle="modal" data-target="@("#EditType-" + item.Guid)" data-url="@Url.Action($"Edit","Type",item.Guid)">Edit</a>
                    @await Html.PartialAsync("Modal/_EditType", item)
                    <a class="btn btn-danger" data-toggle="modal" data-target="@("#DeleteType-" + item.Guid)" data-url="@Url.Action($"Delete","Type",item.Guid)">Delete</a>
                    @await Html.PartialAsync("Modal/_ConfirmDelete",item)

                </td>
            </tr>
        }
    </tbody>

</table>


@Html.Partial("_pagination",Model.Pagination)



@model mvc.Models.Event.PaginateEvent

@{
    ViewData["Title"] = "Event";
}

<h2>Event List</h2>
<p>

    <button class="btn btn-outline-dark" data-toggle="modal" data-target="@("#CreateEvent")" data-url="@Url.Action($"CreateEvent","Event")">Create</button>
    <a class="btn btn-outline-dark" asp-action="Types">Create Types</a>
    @await Html.PartialAsync("Modal/_CreateEvent",new mvc.Models.Event.Event())
    
</p>

 
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(name => Model.Event.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(name => Model.Event.First().Type)
            </th>
            <th>
                @Html.DisplayNameFor(name => Model.Event.First().StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(name => Model.Event.First().EndDate)
            </th>

        </tr>


    </thead>
    <tbody>
        @foreach (var item in Model.Event)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    <button class="btn btn-primary" onclick="showTimeline('@item.Guid')">Show</button>
                    @{string x= Url.Action("ManageSchedule","Event")+"/"+item.Guid.ToString();}
                    <a class="btn btn-primary" href=@x>Manage</a>
                    <button class="btn btn-primary" data-toggle="modal" data-target="@("#EditEvent-" + item.Guid)">Edit</button>
                    @await Html.PartialAsync("Modal/_EditEvent", item)
                    <button class="btn btn-danger" data-toggle="modal" data-target="@("#DeleteModal-" +item.Guid)">Delete</button>
                    @await Html.PartialAsync("Modal/_ConfirmDelete", new mvc.Models.DTO.Modal(item.Guid, "Event","DeleteEvent"))
                
                </td>
            </tr>
        }
    </tbody>

</table> 

<div>
    @foreach (var item in Model.Event)
    {
        if(item.Schedules.Count!=0){
            <div id="@item.Guid" style="display:none;">
                @Html.Partial("Modal/_Timeline", item.Schedules)
            </div>
        }

    }
</div>
@Html.Partial("_pagination",Model.Pagination)


<script>
    function showTimeline(id){
        var x = $(`#${id}`)
        x.siblings().hide(300)
        x.is(':visible') ? x.hide(300) : x.show(300)
    }
</script>